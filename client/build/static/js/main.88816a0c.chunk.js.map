{"version":3,"sources":["backendUrl.ts","services/auth.ts","utils/localStorage.ts","services/projects.ts","services/members.ts","redux/slices/notificationSlice.ts","utils/helperFuncs.ts","redux/slices/projectsSlice.ts","services/users.ts","redux/slices/usersSlice.ts","redux/slices/authSlice.ts","styles/muiStyles.ts","components/NavBar.tsx","pages/Auth/LoginPage.tsx","pages/Auth/CreateUserPage.tsx","pages/Main/ProjectsTable.tsx","components/CustomDialogTitle.tsx","components/FormDialog.tsx","pages/Main/ProjectForm.tsx","pages/Main/ProjectsActionCard.tsx","pages/Main/ProjectsPage.tsx","services/bugs.ts","redux/slices/bugsSlice.ts","components/ConfirmDialog.tsx","pages/Main/BugForm.tsx","pages/Main/BugsMenu.tsx","styles/customStyles.ts","pages/Main/BugsTable.tsx","pages/Main/BugsActionCard.tsx","pages/Main/BugsCard.tsx","pages/Main/ProjectDetailsPage.tsx","pages/Main/BugsDetailsPage.tsx","Routes.tsx","components/ToastNotification.tsx","styles/customTheme.ts","App.tsx","redux/store.ts","index.tsx"],"names":["backendUrl","token","setConfig","headers","login","credentials","a","axios","post","response","data","signup","authService","setToken","newToken","storageKeyUser","storage","saveUser","user","localStorage","setItem","JSON","stringify","loadUser","userKey","getItem","parse","removeUser","removeItem","baseUrl","getProjects","get","createProject","projectData","deleteProject","projectId","delete","editProjectName","newName","put","name","projectService","addMembers","members","removeMember","memberId","memberService","notificationSlice","createSlice","initialState","message","type","reducers","setNotification","state","action","payload","clearNotification","actions","timeoutID","notify","dispatch","window","clearTimeout","setTimeout","selectNotifState","notification","getErrorMsg","err","formatDateTime","date","format","Date","projectsSlice","projects","fetchStatus","fetchError","submitLoading","submitError","sortBy","setProjects","addProject","push","removeProject","filter","p","id","updateProjectName","map","project","find","updatedMembers","m","member","setFetchProjectsLoading","setFetchProjectsError","setSubmitProjectLoading","setSubmitProjectError","clearSubmitProjectError","sortProjectsBy","fetchProjects","allProjects","selectProjectsState","getUsers","userService","usersSlice","users","status","error","setUsers","setUsersLoading","fetchUsers","allUsers","selectUsersState","authSlice","loading","setUser","setAuthLoading","setAuthLoadingFalse","setAuthError","clearAuthError","selectAuthState","auth","useTableStyles","makeStyles","theme","table","fontWeight","color","palette","secondary","main","backgroundColor","primary","light","clickableCell","cursor","scrollableTable","overflowY","maxHeight","index","useDialogStyles","dialogWrapper","paddingBottom","overflow","breakpoints","down","padding","fab","position","bottom","spacing","right","zIndex","roundIconButton","minWidth","borderRadius","useFormStyles","submitBtn","marginTop","height","avatar","fieldMargin","radioGroupForm","width","radioGroup","display","alignItems","radioGroupLabel","marginRight","formControlLabels","justifyContent","flexDirection","useMainPageStyles","root","headerPaper","marginBottom","headerIcon","fontSize","projectsPaper","minHeight","projectsListTable","detailsHeader","flexHeader","btnsWrapper","margin","membersWrapper","filterMembersInput","flexInput","bugsPaper","bugsActionCard","notesBtnWrapper","iconText","verticalAlign","textIconsWrapper","listItemWrapper","flexedWrapper","gotoIcon","marginLeft","marginText","notFoundPaper","error404Image","error404Text","textAlign","notFoundWrapper","useActionCardStyles","inputs","searchBarWrapper","sortBarWrapper","flexWrapper","useNavStyles","container","top","leftPortion","flexGrow","logoWrapper","logoBtn","textTransform","backBtn","svgImage","rightBtnWrapper","lastBtn","threeDotsBtn","menuIcon","userInfo","userBtnMob","useAuthPageStyles","form","inputField","submitButton","titleLogo","footerText","link","NavBar","useSelector","useDispatch","history","useHistory","pathname","useLocation","classes","useTheme","isMobile","useMediaQuery","handleGoBack","includes","slice","indexOf","Container","disableGutters","className","AppBar","elevation","Toolbar","variant","Button","component","RouterLink","to","startIcon","onClick","Avatar","username","Typography","style","role","size","validationSchema","yup","required","password","LoginPage","useState","showPass","setShowPass","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","Paper","onSubmit","userData","TextField","fullWidth","inputRef","label","helperText","InputProps","startAdornment","InputAdornment","endAdornment","IconButton","prevState","disabled","Alert","severity","onClose","AlertTitle","max","min","matches","confirmPassword","OnBoardPage","showConfPass","setShowConfPass","tableHeaders","ProjectsTable","Table","TableHead","TableRow","t","TableCell","align","TableBody","Link","text","maxCharLimit","length","bugs","createdBy","createdAt","DialogTitle","withStyles","createStyles","closeButton","props","children","other","disableTypography","aria-label","MuiDialogContent","MuiDialogActions","FormDialog","triggerBtn","title","dialogOpen","setDialogOpen","handleDialogClose","handleDialogOpen","closeMenu","proppedChildren","React","isValidElement","cloneElement","closeDialog","icon","iconSize","MenuItem","iconStyle","Fab","Dialog","open","maxWidth","paper","DialogContent","ProjectForm","editMode","currentName","currentMembers","defaultValues","setMembers","updatedProject","updatedAt","newProject","createNewProject","e","preventDefault","addProjectMembers","Autocomplete","multiple","filterSelectedOptions","onChange","selectedOption","s","options","u","getOptionLabel","option","renderInput","params","paddingLeft","inputProps","renderOption","ListItem","dense","ListItemAvatar","ListItemText","primaryTypographyProps","renderTags","value","getTagProps","Chip","ProjectsActionCard","AddIcon","showAddProjectButton","ProjectsPage","filteredSortedProjects","CircularProgress","disableShrink","bugService","getBugs","createBug","bugData","updateBug","bugId","deleteBug","closeBug","reopenBug","bugsSlice","fetchLoading","filterBy","setBugs","addBug","bug","b","removeBug","updateBugStatus","setFetchBugsLoading","setFetchBugsError","setSubmitBugLoading","setSubmitBugError","clearSubmitBugError","closeReopenBug","returnedData","isResolved","closedAt","closedBy","reopenedAt","reopenedBy","selectBugsState","ConfirmDialog","contentText","actionBtnText","actionFunc","dividers","DialogActions","description","BugForm","isEditMode","currentData","priority","control","updatedBug","updatedBy","editBug","newBug","createNewBug","multiline","rows","rowsMax","as","FormControl","RadioGroup","row","defaultValue","FormLabel","FormControlLabel","Radio","BugsMenu","anchorEl","setAnchorEl","handleCloseMenu","event","currentTarget","Menu","keepMounted","Boolean","marginThreshold","anchorOrigin","vertical","horizontal","transformOrigin","RedoIcon","DoneOutlineIcon","EditOutlinedIcon","DeleteOutlineIcon","colors","low","medium","high","closed","closedBg","openBg","priorityStyles","statusStyles","BugsTable","BugsActionCard","filterValue","setFilterValue","showBugPopup","BugsCard","selectBugsByProjectId","useEffect","projectBugs","fetchBugsByProjectId","filteredSortedBugs","ProjectDetailsPage","useParams","projectInState","selectProjectById","isAdmin","isProjectManager","handleDeleteProject","EditIcon","Divider","GroupAddOutlinedIcon","BugsDetailsPage","selectBugById","handleDeleteBug","handleCloseBug","handleReopenBug","statusCSS","Routes","isLoggedIn","exact","path","useStyles","snackbar","ToastNotification","clearNotif","Snackbar","customTheme","createMuiTheme","overrides","MuiTypography","wordBreak","App","flex","useBodyStyles","loggedUser","ThemeProvider","store","configureStore","reducer","authReducer","projectsReducer","bugsReducer","usersReducer","notificationReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88816a0c.chunk.js","sourcesContent":["const backendUrl = \"http://localhost:3005\";\n\nexport default backendUrl;\n","import axios from 'axios';\nimport backendUrl from '../backendUrl';\n\ninterface Credentials {\n  username: string;\n  password: string;\n}\n\ntype Token = string | null;\n\nlet token: Token = null;\n\nconst setToken = (newToken: string) => {\n  token = newToken;\n};\n\nexport const setConfig = () => {\n  return {\n    headers: { 'x-auth-token': token },\n  };\n};\n\nconst login = async (credentials: Credentials) => {\n  const response = await axios.post(`${backendUrl}/login`, credentials);\n  return response.data;\n};\n\nconst signup = async (credentials: Credentials) => {\n  const response = await axios.post(`${backendUrl}/signup`, credentials);\n  return response.data;\n};\n\nconst authService = { login, signup, setToken };\n\nexport default authService;\n","const storageKeyUser = \"bugTrackerUserKey\";\n\ninterface User {\n  id: string;\n  username: string;\n  token: string;\n}\n\nconst saveUser = (user: User) => {\n  localStorage.setItem(storageKeyUser, JSON.stringify(user));\n};\n\nconst loadUser = () => {\n  const userKey = localStorage.getItem(storageKeyUser);\n\n  if (userKey) {\n    return JSON.parse(userKey);\n  }\n\n  return null;\n};\n\nconst removeUser = () => localStorage.removeItem(storageKeyUser);\n\nconst storage = { saveUser, loadUser, removeUser };\n\nexport default storage;\n","import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { setConfig } from './auth';\nimport { ProjectPayload } from '../redux/types';\n\nconst baseUrl = `${backendUrl}/projects`;\n\nconst getProjects = async () => {\n  const response = await axios.get(baseUrl, setConfig());\n  return response.data;\n};\n\nconst createProject = async (projectData: ProjectPayload) => {\n  const response = await axios.post(baseUrl, projectData, setConfig());\n  return response.data;\n};\n\nconst deleteProject = async (projectId: string) => {\n  const response = await axios.delete(`${baseUrl}/${projectId}`, setConfig());\n  return response.data;\n};\n\nconst editProjectName = async (projectId: string, newName: string) => {\n  const response = await axios.put(\n    `${baseUrl}/${projectId}`,\n    { name: newName },\n    setConfig()\n  );\n  return response.data;\n};\n\nconst projectService = {\n  getProjects,\n  createProject,\n  deleteProject,\n  editProjectName,\n};\n\nexport default projectService;\n","import axios from \"axios\";\nimport backendUrl from \"../backendUrl\";\nimport { setConfig } from \"./auth\";\n\nconst baseUrl = `${backendUrl}/projects`;\n\nconst addMembers = async (projectId: string, members: string[]) => {\n  const response = await axios.post(\n    `${baseUrl}/${projectId}/members`,\n    { members },\n    setConfig()\n  );\n  return response.data;\n};\n\nconst removeMember = async (projectId: string, memberId: string) => {\n  const response = await axios.delete(\n    `${baseUrl}/${projectId}/members/${memberId}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst memberService = { addMembers, removeMember };\n\nexport default memberService;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../store';\nimport { NotifPayload } from '../types';\n\ninterface InitialNotifState {\n  message: string | null;\n  type: 'success' | 'error' | null;\n}\n\nconst initialState: InitialNotifState = {\n  message: null,\n  type: null,\n};\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    setNotification: (state, action: PayloadAction<NotifPayload>) => {\n      state.message = action.payload.message;\n      state.type = action.payload.type;\n    },\n    clearNotification: (state) => {\n      state.message = null;\n      state.type = null;\n    },\n  },\n});\n\nexport const { setNotification, clearNotification } = notificationSlice.actions;\n\nlet timeoutID: number = 0;\n\nexport const notify = (\n  message: string,\n  type: 'success' | 'error'\n): AppThunk => {\n  return (dispatch) => {\n    window.clearTimeout(timeoutID);\n    dispatch(setNotification({ message, type }));\n\n    timeoutID = window.setTimeout(() => {\n      dispatch(clearNotification());\n    }, 6000);\n  };\n};\n\nexport const selectNotifState = (state: RootState) => state.notification;\n\nexport default notificationSlice.reducer;\n","import { format } from \"date-fns\";\n\ninterface ReturnedError {\n  response?: {\n    data?: {\n      message: string;\n    };\n  };\n  message: string;\n}\n\nexport const getErrorMsg = (err: ReturnedError) => {\n  if (err?.response?.data?.message) {\n    return err.response.data.message;\n  } else {\n    return err.message;\n  }\n};\n\nexport const truncateString = (text: string, maxCharLimit: number) => {\n  return text.length < maxCharLimit\n    ? text\n    : text.slice(0, maxCharLimit) + \"...\";\n};\n\nexport const formatDateTime = (date: Date) => {\n  return format(new Date(date), \"dd/MM/yy',' h':'mm a\");\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport projectService from \"../../services/projects\";\nimport memberService from \"../../services/members\";\nimport {\n  ProjectState,\n  ProjectSortValues,\n  ProjectPayload,\n  ProjectMember,\n} from \"../types\";\nimport { notify } from \"./notificationSlice\";\nimport { History } from \"history\";\nimport { getErrorMsg } from \"../../utils/helperFuncs\";\n\ninterface InitialProjectsState {\n  projects: ProjectState[];\n  fetchStatus: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\n  fetchError: string | null;\n  submitLoading: boolean;\n  submitError: string | null;\n  sortBy: ProjectSortValues;\n}\n\nconst initialState: InitialProjectsState = {\n  projects: [],\n  fetchStatus: \"idle\",\n  fetchError: null,\n  submitLoading: false,\n  submitError: null,\n  sortBy: \"newest\",\n};\n\nconst projectsSlice = createSlice({\n  name: \"projects\",\n  initialState,\n  reducers: {\n    setProjects: (state, action: PayloadAction<ProjectState[]>) => {\n      state.projects = action.payload;\n      state.fetchStatus = \"succeeded\";\n      state.fetchError = null;\n    },\n    addProject: (state, action: PayloadAction<ProjectState>) => {\n      state.projects.push(action.payload);\n      state.submitLoading = false;\n      state.submitError = null;\n    },\n    removeProject: (state, action: PayloadAction<string>) => {\n      state.projects = state.projects.filter((p) => p.id !== action.payload);\n    },\n    updateProjectName: (\n      state,\n      action: PayloadAction<{\n        data: { name: string; updatedAt: Date };\n        projectId: string;\n      }>\n    ) => {\n      state.projects = state.projects.map((p) =>\n        p.id === action.payload.projectId ? { ...p, ...action.payload.data } : p\n      );\n      state.submitLoading = false;\n      state.submitError = null;\n    },\n    addMembers: (\n      state,\n      action: PayloadAction<{ members: ProjectMember[]; projectId: string }>\n    ) => {\n      state.projects = state.projects.map((p) =>\n        p.id === action.payload.projectId\n          ? { ...p, members: action.payload.members }\n          : p\n      );\n      state.submitLoading = false;\n      state.submitError = null;\n    },\n    removeMember: (\n      state,\n      action: PayloadAction<{ memberId: string; projectId: string }>\n    ) => {\n      const project = state.projects.find(\n        (p) => p.id === action.payload.projectId\n      );\n\n      if (project) {\n        const updatedMembers = project.members.filter(\n          (m) => m.member.id !== action.payload.memberId\n        );\n        state.projects = state.projects.map((p) =>\n          p.id === action.payload.projectId\n            ? { ...p, members: updatedMembers }\n            : p\n        );\n      }\n    },\n    setFetchProjectsLoading: (state) => {\n      state.fetchStatus = \"loading\";\n      state.fetchError = null;\n    },\n    setFetchProjectsError: (state, action: PayloadAction<string>) => {\n      state.fetchStatus = \"failed\";\n      state.fetchError = action.payload;\n    },\n\n    setSubmitProjectLoading: (state) => {\n      state.submitLoading = true;\n      state.submitError = null;\n    },\n    setSubmitProjectError: (state, action: PayloadAction<string>) => {\n      state.submitLoading = false;\n      state.submitError = action.payload;\n    },\n    clearSubmitProjectError: (state) => {\n      state.submitError = null;\n    },\n    sortProjectsBy: (state, action: PayloadAction<ProjectSortValues>) => {\n      state.sortBy = action.payload;\n    },\n  },\n});\n\nexport const {\n  setProjects,\n  addProject,\n  removeProject,\n  updateProjectName,\n  addMembers,\n  removeMember,\n  setFetchProjectsLoading,\n  setFetchProjectsError,\n  setSubmitProjectLoading,\n  setSubmitProjectError,\n  clearSubmitProjectError,\n  sortProjectsBy,\n} = projectsSlice.actions;\n\nexport const fetchProjects = (): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setFetchProjectsLoading());\n      const allProjects = await projectService.getProjects();\n      dispatch(setProjects(allProjects));\n    } catch (e: any) {\n      dispatch(setFetchProjectsError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const createNewProject = (\n  projectData: ProjectPayload,\n  closeDialog?: () => void\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setSubmitProjectLoading());\n      const newProject = await projectService.createProject(projectData);\n      dispatch(addProject(newProject));\n      dispatch(notify(\"New project added!\", \"success\"));\n      closeDialog && closeDialog();\n    } catch (e: any) {\n      dispatch(setSubmitProjectError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const deleteProject = (\n  projectId: string,\n  history: History\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      await projectService.deleteProject(projectId);\n      history.push(\"/\");\n      dispatch(removeProject(projectId));\n      dispatch(notify(\"Deleted the project.\", \"success\"));\n    } catch (e: any) {\n      dispatch(notify(getErrorMsg(e), \"error\"));\n    }\n  };\n};\n\nexport const editProjectName = (\n  projectId: string,\n  name: string,\n  closeDialog?: () => void\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setSubmitProjectLoading());\n      const updatedProject = await projectService.editProjectName(\n        projectId,\n        name\n      );\n      dispatch(\n        updateProjectName({\n          data: {\n            name: updatedProject.name,\n            updatedAt: updatedProject.updatedAt,\n          },\n          projectId,\n        })\n      );\n      dispatch(notify(\"Edited the project's name!\", \"success\"));\n      closeDialog && closeDialog();\n    } catch (e: any) {\n      dispatch(setSubmitProjectError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const addProjectMembers = (\n  projectId: string,\n  members: string[],\n  closeDialog?: () => void\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setSubmitProjectLoading());\n      const updatedMembers = await memberService.addMembers(projectId, members);\n      dispatch(addMembers({ members: updatedMembers, projectId }));\n      dispatch(notify(\"New member(s) added to the project!\", \"success\"));\n      closeDialog && closeDialog();\n    } catch (e: any) {\n      dispatch(setSubmitProjectError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const removeProjectMember = (\n  projectId: string,\n  memberId: string\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      await memberService.removeMember(projectId, memberId);\n      dispatch(removeMember({ memberId, projectId }));\n      dispatch(notify(\"Removed the project member.\", \"success\"));\n    } catch (e: any) {\n      dispatch(notify(getErrorMsg(e), \"error\"));\n    }\n  };\n};\n\nexport const selectProjectsState = (state: RootState) => state.projects;\n\nexport const selectProjectById = (state: RootState, projectId: string) => {\n  return state.projects.projects.find((p) => p.id === projectId);\n};\n\nexport default projectsSlice.reducer;\n","import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { setConfig } from './auth';\n\nconst baseUrl = `${backendUrl}/users`;\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl, setConfig());\n  return response.data;\n};\n\nconst userService = { getUsers };\n\nexport default userService;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport userService from \"../../services/users\";\nimport { User } from \"../types\";\nimport { notify } from \"./notificationSlice\";\nimport { getErrorMsg } from \"../../utils/helperFuncs\";\n\ninterface InitialBugState {\n  users: User[];\n  status: \"idle\" | \"loading\" | \"succeeded\";\n  error: string | null;\n}\n\nconst initialState: InitialBugState = {\n  users: [],\n  status: \"idle\",\n  error: null,\n};\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    setUsers: (state, action: PayloadAction<User[]>) => {\n      state.users = action.payload;\n      state.status = \"succeeded\";\n      state.error = null;\n    },\n    setUsersLoading: (state) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n  },\n});\n\nexport const { setUsers, setUsersLoading } = usersSlice.actions;\n\nexport const fetchUsers = (): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setUsersLoading());\n      const allUsers = await userService.getUsers();\n      dispatch(setUsers(allUsers));\n    } catch (e: any) {\n      dispatch(notify(getErrorMsg(e), \"error\"));\n    }\n  };\n};\n\nexport const selectUsersState = (state: RootState) => state.users;\n\nexport default usersSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport authService from \"../../services/auth\";\nimport storage from \"../../utils/localStorage\";\nimport {\n  CredentialsPayload,\n  CredentialsPayloadLogin,\n  UserState,\n} from \"../types\";\nimport { fetchProjects } from \"./projectsSlice\";\nimport { notify } from \"./notificationSlice\";\nimport { fetchUsers } from \"./usersSlice\";\nimport { getErrorMsg } from \"../../utils/helperFuncs\";\n\ninterface InitialAuthState {\n  user: UserState | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: InitialAuthState = {\n  user: null,\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<UserState>) => {\n      state.user = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    removeUser: (state) => {\n      state.user = null;\n    },\n    setAuthLoading: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    setAuthLoadingFalse: (state) => {\n      state.loading = false;\n      state.error = null;\n    },\n    setAuthError: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    clearAuthError: (state) => {\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  setUser,\n  removeUser,\n  setAuthLoading,\n  setAuthError,\n  clearAuthError,\n  setAuthLoadingFalse,\n} = authSlice.actions;\n\nexport const login = (credentials: CredentialsPayloadLogin): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setAuthLoading());\n      const userData = await authService.login(credentials);\n      dispatch(setUser(userData));\n\n      storage.saveUser(userData);\n      authService.setToken(userData.token);\n\n      dispatch(fetchProjects());\n      dispatch(fetchUsers());\n      dispatch(notify(`Welcome back, ${userData.username}!`, \"success\"));\n    } catch (e: any) {\n      dispatch(setAuthError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const signup = (credentials: CredentialsPayload): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setAuthLoading());\n      const userData = await authService.signup(credentials);\n      dispatch(setAuthLoadingFalse());\n      dispatch(\n        notify(\n          `${userData.username}! is onboarded with ${userData.role} role`,\n          \"success\"\n        )\n      );\n    } catch (e: any) {\n      dispatch(setAuthError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const logout = (): AppThunk => {\n  return (dispatch) => {\n    dispatch(removeUser());\n    storage.removeUser();\n    dispatch(notify(\"Logged out!\", \"success\"));\n  };\n};\n\nexport const autoLogin = (): AppThunk => {\n  return (dispatch) => {\n    const loggedUser = storage.loadUser();\n    if (loggedUser) {\n      dispatch(setUser(loggedUser));\n      authService.setToken(loggedUser.token);\n      dispatch(fetchProjects());\n      dispatch(fetchUsers());\n    }\n  };\n};\n\nexport const selectAuthState = (state: RootState) => state.auth;\n\nexport default authSlice.reducer;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useBodyStyles = () =>\n  makeStyles(\n    (theme) => ({\n      root: {\n        width: \"100vW\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minHeight: \"100vH\",\n        backgroundColor: \"#00968810\",\n      },\n    }),\n    { index: 1 }\n  );\n\nexport const useTableStyles = makeStyles(\n  (theme) => ({\n    table: {\n      \"& thead th\": {\n        fontWeight: \"600\",\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    clickableCell: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.main + \"15\",\n        cursor: \"pointer\",\n      },\n    },\n    scrollableTable: {\n      \"& thead th\": {\n        fontWeight: \"600\",\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.light,\n      },\n      overflowY: \"auto\",\n      maxHeight: \"350px\",\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useDialogStyles = makeStyles(\n  (theme) => ({\n    dialogWrapper: {\n      paddingBottom: 20,\n      overflow: \"hidden\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: 0,\n      },\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      zIndex: 1000,\n    },\n    roundIconButton: {\n      minWidth: 0,\n      padding: \"0.65em\",\n      borderRadius: \"2em\",\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useFormStyles = makeStyles(\n  (theme) => ({\n    submitBtn: {\n      marginTop: \"1.5em\",\n      height: \"3.2em\",\n    },\n    avatar: {\n      color: theme.palette.primary.main,\n      backgroundColor: \"#d3d3d3\",\n    },\n    fieldMargin: {\n      marginTop: \"1.5em\",\n    },\n    radioGroupForm: {\n      marginTop: \"0.8em\",\n      width: \"100%\",\n    },\n    radioGroup: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    radioGroupLabel: {\n      marginRight: \"2em\",\n    },\n    formControlLabels: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"80%\",\n      [theme.breakpoints.down(\"xs\")]: {\n        flexDirection: \"column\",\n        width: \"auto\",\n      },\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useMainPageStyles = makeStyles(\n  (theme) => ({\n    root: {\n      padding: \"1em 0\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.5em 0.5em\",\n      },\n    },\n    headerPaper: {\n      padding: \"0.8em 1.5em\",\n      marginBottom: \"1em\",\n      display: \"flex\",\n      alignItems: \"center\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.3em 0.5em\",\n        marginBottom: \"0.5em\",\n      },\n    },\n    headerIcon: {\n      fontSize: \"4.5em\",\n      marginRight: \"0.2em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"3em\",\n        marginRight: \"0.3em\",\n      },\n    },\n    projectsPaper: {\n      padding: \"1.5em\",\n      minHeight: \"calc(100vH - 244px)\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.7em 0.3em\",\n        minHeight: \"calc(100vH - 160px)\",\n      },\n    },\n    projectsListTable: {\n      marginTop: \"1.5em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: 0,\n      },\n    },\n    detailsHeader: {\n      padding: \"1.2em 1.5em\",\n      marginBottom: \"1em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.5em 0.7em\",\n        marginBottom: \"0.5em\",\n      },\n    },\n    flexHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    btnsWrapper: {\n      margin: \"1em 0\",\n      [theme.breakpoints.down(\"xs\")]: {\n        margin: \"0.5em 0\",\n      },\n    },\n    membersWrapper: {\n      marginTop: \"1em\",\n    },\n    filterMembersInput: {\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"55%\",\n      },\n    },\n    flexInput: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: \"0.3em\",\n      },\n    },\n    bugsPaper: {\n      padding: \"1.5em\",\n      minHeight: \"calc(100vH - 356px)\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.5em 0.7em\",\n        minHeight: \"calc(100vH - 256px)\",\n      },\n    },\n    bugsActionCard: {\n      margin: \"1.5em 0\",\n      [theme.breakpoints.down(\"xs\")]: {\n        margin: \"0.5em 0\",\n      },\n    },\n    avatar: {\n      width: theme.spacing(4.8),\n      height: theme.spacing(4.8),\n      marginRight: \"0.4em\",\n      marginTop: \"0.3em\",\n      color: theme.palette.primary.main,\n      backgroundColor: \"#d3d3d3\",\n    },\n    notesBtnWrapper: {\n      margin: \"0.5em 0\",\n    },\n    iconText: {\n      verticalAlign: \"middle\",\n      display: \"inline-flex\",\n    },\n    textIconsWrapper: {\n      display: \"flex\",\n      width: \"100px\",\n      justifyContent: \"space-between\",\n    },\n    listItemWrapper: {\n      padding: \"0.4em 0.3em\",\n    },\n    flexedWrapper: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginTop: \"0.3em\",\n    },\n    roundIconButton: {\n      minWidth: 0,\n      padding: \"0.65em\",\n      borderRadius: \"2em\",\n    },\n    gotoIcon: {\n      fontSize: \"0.7em\",\n      marginLeft: \"0.4em\",\n    },\n    marginText: {\n      marginBottom: \"0.35em\",\n    },\n    notFoundPaper: {\n      padding: \"1.5em\",\n      minHeight: \"calc(100vH - 130px)\",\n      [theme.breakpoints.down(\"xs\")]: {\n        padding: \"0.5em 0.7em\",\n        minHeight: \"calc(100vH - 80px)\",\n      },\n    },\n    error404Image: {\n      width: \"250px\",\n      display: \"block\",\n      margin: \"0 auto\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"150px\",\n      },\n    },\n    error404Text: {\n      fontSize: \"2.2em\",\n      textAlign: \"center\",\n      marginTop: \"1em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"1.5em\",\n      },\n    },\n    notFoundWrapper: {\n      marginTop: \"6em\",\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useActionCardStyles = makeStyles(\n  (theme) => ({\n    inputs: {\n      display: \"flex\",\n      minWidth: \"100%\",\n      justifyContent: \"space-between\",\n      marginBottom: \"1.5em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: \"0.7em\",\n      },\n    },\n    searchBarWrapper: {\n      width: \"70%\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"55%\",\n      },\n    },\n    sortBarWrapper: {\n      width: \"25%\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"42%\",\n      },\n    },\n    flexWrapper: {\n      display: \"flex\",\n      minWidth: \"100%\",\n      justifyContent: \"space-between\",\n      [theme.breakpoints.down(\"xs\")]: {\n        justifyContent: \"flex-start\",\n        marginLeft: \"0.2em\",\n      },\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useNavStyles = makeStyles(\n  (theme) => ({\n    container: {\n      position: \"sticky\",\n      top: 0,\n      zIndex: 100,\n    },\n    leftPortion: {\n      flexGrow: 1,\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    logoWrapper: {\n      marginRight: \"1em\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    logoBtn: {\n      textTransform: \"none\",\n      fontSize: \"1.2em\",\n      padding: \"0.1em\",\n      marginRight: \"0.3em\",\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"1em\",\n        marginLeft: \"0.6em\",\n      },\n    },\n    backBtn: {\n      [theme.breakpoints.down(\"xs\")]: {\n        marginLeft: \"0.6em\",\n      },\n    },\n    svgImage: {\n      width: \"35px\",\n      marginRight: \"5px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"30px\",\n      },\n    },\n    rightBtnWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    lastBtn: {\n      marginLeft: \"1em\",\n    },\n    threeDotsBtn: {\n      padding: \"0.35em\",\n    },\n    menuIcon: {\n      marginRight: \"10px\",\n    },\n    userInfo: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      width: theme.spacing(4.1),\n      height: theme.spacing(4.1),\n      marginRight: \"0.4em\",\n      color: theme.palette.primary.main,\n      backgroundColor: \"#d3d3d3\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: theme.spacing(3.5),\n        height: theme.spacing(3.5),\n      },\n    },\n    btnsWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    userBtnMob: {\n      padding: \"0.1em\",\n    },\n  }),\n  { index: 1 }\n);\n\nexport const useAuthPageStyles = makeStyles(\n  (theme) => ({\n    root: {\n      padding: \"1.5em 3em\",\n      width: \"330px\",\n      margin: \"auto\",\n      marginTop: \"16vH\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"auto\",\n        margin: \"0.5em 0.5em\",\n        padding: \"1em\",\n      },\n    },\n    form: {\n      marginTop: \"3em\",\n    },\n    inputField: {\n      marginBottom: \"1.5em\",\n    },\n    submitButton: {\n      marginTop: \"0.5em\",\n      height: \"3.1em\",\n      fontSize: \"1em\",\n      fontWeight: 500,\n    },\n    titleLogo: {\n      display: \"block\",\n      width: \"7em\",\n      margin: \"0 auto\",\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"6em\",\n      },\n    },\n    footerText: {\n      marginTop: \"1em\",\n      textAlign: \"center\",\n    },\n    link: {\n      cursor: \"pointer\",\n    },\n  }),\n  { index: 1 }\n);\n","import { Link as RouterLink, useHistory, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAuthState, logout } from \"../redux/slices/authSlice\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  useMediaQuery,\n  Container,\n  Avatar,\n  Typography,\n} from \"@material-ui/core\";\nimport { useNavStyles } from \"../styles/muiStyles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst NavBar = () => {\n  const { user } = useSelector(selectAuthState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const classes = useNavStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleLogout = () => {\n    dispatch(logout());\n    history.push(\"/login\");\n  };\n\n  const handleGoBack = () => {\n    if (pathname.includes(\"/bugs\")) {\n      history.push(`${pathname.slice(0, pathname.indexOf(\"/bugs\"))}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const mainButton = () => {\n    if ([\"/\", \"/login\", \"/signup\"].includes(pathname)) {\n      return (\n        <div className={classes.logoWrapper}>\n          <Button\n            className={classes.logoBtn}\n            component={RouterLink}\n            to=\"/\"\n            color=\"secondary\"\n          >\n            Project Tracking System\n          </Button>\n          {!isMobile}\n        </div>\n      );\n    } else {\n      return (\n        <Button\n          startIcon={<ArrowBackIcon />}\n          color=\"secondary\"\n          onClick={handleGoBack}\n          className={classes.backBtn}\n        >\n          {pathname.includes(\"/bugs\") ? \"Project\" : \"Home\"}\n        </Button>\n      );\n    }\n  };\n\n  return (\n    <Container disableGutters={isMobile} className={classes.container}>\n      <AppBar elevation={1} color=\"inherit\" position=\"static\">\n        <Toolbar variant=\"dense\" disableGutters={isMobile}>\n          <div className={classes.leftPortion}>{mainButton()}</div>\n          <div>\n            {user ? (\n              <div className={classes.btnsWrapper}>\n                <div className={classes.userInfo}>\n                  <Avatar className={classes.avatar}>\n                    {user.username.slice(0, 1)}\n                  </Avatar>\n                  <Typography color=\"secondary\" variant=\"body1\">\n                    {user.username}\n                  </Typography>\n\n                  <Typography\n                    color=\"secondary\"\n                    variant=\"body1\"\n                    style={{ marginLeft: \"1em\" }}\n                  >\n                    {user.role}\n                  </Typography>\n                </div>\n                <Button\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  className={classes.lastBtn}\n                  onClick={handleLogout}\n                  startIcon={<PowerSettingsNewIcon />}\n                >\n                  Log Out\n                </Button>\n              </div>\n            ) : (\n              <div>\n                <Button\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  component={RouterLink}\n                  to=\"/login\"\n                  startIcon={<ExitToAppIcon />}\n                >\n                  Log In\n                </Button>\n              </div>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Container>\n  );\n};\n\nexport default NavBar;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  login,\n  clearAuthError,\n  selectAuthState,\n} from \"../../redux/slices/authSlice\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport {\n  TextField,\n  Button,\n  InputAdornment,\n  IconButton,\n  Paper,\n} from \"@material-ui/core\";\nimport { useAuthPageStyles } from \"../../styles/muiStyles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\ninterface InputValues {\n  username: string;\n  password: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup.string().required(\"Required\"),\n  password: yup.string().required(\"Required\"),\n});\n\nconst LoginPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleLogin = ({ username, password }: InputValues) => {\n    dispatch(login({ username, password }));\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleLogin)} className={classes.form}>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"username\"\n              type=\"text\"\n              label=\"Username\"\n              variant=\"outlined\"\n              error={\"username\" in errors}\n              helperText={\"username\" in errors ? errors.username.message : \"\"}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"password\"\n              type={showPass ? \"text\" : \"password\"}\n              label=\"Password\"\n              variant=\"outlined\"\n              error={\"password\" in errors}\n              helperText={\"password\" in errors ? errors.password.message : \"\"}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPass((prevState) => !prevState)}\n                      size=\"small\"\n                    >\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LockIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n            startIcon={<ExitToAppIcon />}\n            type=\"submit\"\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Log In\n          </Button>\n        </form>\n\n        {error && (\n          <div\n            style={{ width: \"100%\", marginTop: \"0.8em\", marginBottom: \"0.8em\" }}\n          >\n            <Alert severity=\"error\" onClose={() => dispatch(clearAuthError())}>\n              <AlertTitle>Error</AlertTitle>\n              {error}\n            </Alert>\n          </div>\n        )}\n      </Paper>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  signup,\n  clearAuthError,\n  setAuthError,\n  selectAuthState,\n} from \"../../redux/slices/authSlice\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport {\n  TextField,\n  Button,\n  InputAdornment,\n  IconButton,\n  Paper,\n} from \"@material-ui/core\";\nimport { useAuthPageStyles } from \"../../styles/muiStyles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport EnhancedEncryptionIcon from \"@material-ui/icons/EnhancedEncryption\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\ninterface InputValues {\n  username: string;\n  password: string;\n  confirmPassword: string;\n  role: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup\n    .string()\n    .required(\"Required\")\n    .max(20, \"Must be at most 20 characters\")\n    .min(3, \"Must be at least 3 characters\")\n    .matches(\n      /^[a-zA-Z0-9-_]*$/,\n      \"Only alphanum, dash & underscore characters are allowed\"\n    ),\n  password: yup\n    .string()\n    .required(\"Required\")\n    .min(6, \"Must be at least 6 characters\"),\n  confirmPassword: yup\n    .string()\n    .required(\"Required\")\n    .min(6, \"Must be at least 6 characters\"),\n});\n\nconst OnBoardPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const [showConfPass, setShowConfPass] = useState<boolean>(false);\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleSignup = ({\n    username,\n    password,\n    confirmPassword,\n    role,\n  }: InputValues) => {\n    if (password !== confirmPassword) {\n      return dispatch(setAuthError(\"Both passwords need to match.\"));\n    }\n    dispatch(signup({ username, password, role }));\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleSignup)} className={classes.form}>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"username\"\n              type=\"text\"\n              label=\"Username\"\n              variant=\"outlined\"\n              error={\"username\" in errors}\n              helperText={\"username\" in errors ? errors.username.message : \"\"}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"role\"\n              type=\"text\"\n              label=\"User Role\"\n              variant=\"outlined\"\n              error={\"role\" in errors}\n              helperText={\"role\" in errors ? errors.role.message : \"\"}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"password\"\n              type={showPass ? \"text\" : \"password\"}\n              label=\"Password\"\n              variant=\"outlined\"\n              error={\"password\" in errors}\n              helperText={\"password\" in errors ? errors.password.message : \"\"}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPass((prevState) => !prevState)}\n                      size=\"small\"\n                    >\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LockIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              name=\"confirmPassword\"\n              type={showConfPass ? \"text\" : \"password\"}\n              label=\"Confirm Password\"\n              variant=\"outlined\"\n              error={\"confirmPassword\" in errors}\n              helperText={\n                \"confirmPassword\" in errors\n                  ? errors.confirmPassword.message\n                  : \"\"\n              }\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\n                      size=\"small\"\n                    >\n                      {showConfPass ? (\n                        <VisibilityOffIcon />\n                      ) : (\n                        <VisibilityIcon />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <EnhancedEncryptionIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n            fullWidth\n            startIcon={<PersonAddIcon />}\n            type=\"submit\"\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Crate User\n          </Button>\n        </form>\n        {error && (\n          <div\n            style={{ width: \"100%\", marginTop: \"0.8em\", marginBottom: \"0.8em\" }}\n          >\n            <Alert severity=\"error\" onClose={() => dispatch(clearAuthError())}>\n              <AlertTitle>Error</AlertTitle>\n              {error}\n            </Alert>\n          </div>\n        )}\n      </Paper>\n    </div>\n  );\n};\n\nexport default OnBoardPage;\n","import { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { ProjectState } from '../../redux/types';\nimport { formatDateTime, truncateString } from '../../utils/helperFuncs';\n\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Link,\n  Paper,\n} from '@material-ui/core';\nimport { useTableStyles } from '../../styles/muiStyles';\n\nconst tableHeaders = ['Name', 'Bugs', 'Members', 'Admin', 'Added'];\n\nconst ProjectsTable: React.FC<{ projects: ProjectState[] }> = ({\n  projects,\n}) => {\n  const classes = useTableStyles();\n  const history = useHistory();\n\n  return (\n    <Paper className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {tableHeaders.map((t) => (\n              <TableCell key={t} align=\"center\">\n                {t}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {projects.map((p) => (\n            <TableRow key={p.id}>\n              <TableCell\n                onClick={() => history.push(`/projects/${p.id}`)}\n                className={classes.clickableCell}\n                align=\"center\"\n              >\n                <Link\n                  component={RouterLink}\n                  to={`/projects/${p.id}`}\n                  color=\"secondary\"\n                >\n                  {truncateString(p.name, 30)}\n                </Link>\n              </TableCell>\n              <TableCell align=\"center\">{p.bugs.length}</TableCell>\n              <TableCell align=\"center\">{p.members.length}</TableCell>\n              <TableCell align=\"center\">{p.createdBy.username}</TableCell>\n              <TableCell align=\"center\">\n                {formatDateTime(p.createdAt)}\n              </TableCell>              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nexport default ProjectsTable;\n","import React from 'react';\nimport { Typography, IconButton } from '@material-ui/core';\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n} from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.secondary.main,\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\" color=\"secondary\">\n        {children}\n      </Typography>\n      {onClose && (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    </MuiDialogTitle>\n  );\n});\n\nexport const DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport const DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n","import React, { useState } from 'react';\nimport { DialogTitle } from './CustomDialogTitle';\nimport { TriggerButtonTypes } from './types';\n\nimport {\n  Dialog,\n  DialogContent,\n  Button,\n  IconButton,\n  MenuItem,\n  Fab,\n} from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\n\nconst FormDialog: React.FC<{\n  title: string;\n  triggerBtn: TriggerButtonTypes;\n  children: React.ReactNode;\n}> = ({ triggerBtn, children, title }) => {\n  const classes = useDialogStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n    triggerBtn.type === 'menu' && triggerBtn.closeMenu();\n  };\n\n  const triggerButton = () => {\n    if (triggerBtn.type === 'icon') {\n      return (\n        <IconButton\n          color={triggerBtn.color || 'primary'}\n          onClick={handleDialogOpen}\n          size={triggerBtn.size || 'medium'}\n          className={triggerBtn.className}\n          style={triggerBtn.style}\n        >\n          <triggerBtn.icon fontSize={triggerBtn.iconSize || 'default'} />\n        </IconButton>\n      );\n    } else if (triggerBtn.type === 'menu') {\n      return (\n        <MenuItem onClick={handleDialogOpen}>\n          <triggerBtn.icon style={triggerBtn.iconStyle} />\n          {triggerBtn.text}\n        </MenuItem>\n      );\n    } else if (triggerBtn.type === 'fab') {\n      return (        \n          <Fab\n            variant={triggerBtn.variant || 'round'}\n            size={triggerBtn.size || 'large'}\n            color={triggerBtn.color || 'primary'}\n            className={classes.fab}\n            onClick={handleDialogOpen}\n          >\n            <triggerBtn.icon\n              style={{\n                marginRight: triggerBtn.variant === 'extended' ? '0.3em' : 0,\n              }}\n            />\n            {triggerBtn.variant === 'extended' && triggerBtn.text}\n          </Fab>\n      );\n    } else if (triggerBtn.type === 'round') {\n      return (\n        <Button\n          color={triggerBtn.color || 'primary'}\n          variant={triggerBtn.variant || 'contained'}\n          size={triggerBtn.size || 'medium'}\n          onClick={handleDialogOpen}\n          style={triggerBtn.style}\n          className={classes.roundIconButton}\n        >\n          <triggerBtn.icon />\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color={triggerBtn.color || 'primary'}\n          variant={triggerBtn.variant || 'contained'}\n          size={triggerBtn.size || 'medium'}\n          startIcon={<triggerBtn.icon />}\n          onClick={handleDialogOpen}\n          style={triggerBtn.style}\n          className={triggerBtn.className}\n        >\n          {triggerBtn.text}\n        </Button>\n      );\n    }\n  };\n\n  const proppedChildren = React.isValidElement(children)\n    ? React.cloneElement(children, {\n        closeDialog: handleDialogClose,\n      })\n    : children;\n\n  return (\n    <div style={{ display: 'inline' }}>\n      {triggerButton()}\n      <Dialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        maxWidth=\"sm\"\n        fullWidth\n        classes={{ paper: classes.dialogWrapper }}\n      >\n        <DialogTitle onClose={handleDialogClose}>{title}</DialogTitle>\n        <DialogContent>{proppedChildren}</DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default FormDialog;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  createNewProject,\n  editProjectName,\n  addProjectMembers,\n  selectProjectsState,\n  clearSubmitProjectError,\n} from \"../../redux/slices/projectsSlice\";\nimport { selectUsersState } from \"../../redux/slices/usersSlice\";\nimport { User } from \"../../redux/types\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport {\n  TextField,\n  Button,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Chip,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useFormStyles } from \"../../styles/muiStyles\";\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\nimport GroupIcon from \"@material-ui/icons/Group\";\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required(\"Required\")\n    .max(60, \"Must be at most 60 characters\"),\n});\n\ninterface BaseType {\n  closeDialog?: () => void;\n}\ninterface CreateProject extends BaseType {\n  editMode: null;\n  currentName?: string;\n  currentMembers?: string[];\n  projectId?: string;\n}\n\ninterface EditProjectName extends BaseType {\n  editMode: \"name\";\n  currentName: string;\n  projectId: string;\n  currentMembers?: string[];\n}\n\ninterface AddProjectMembers extends BaseType {\n  editMode: \"members\";\n  currentMembers: string[];\n  projectId: string;\n  currentName?: string;\n}\n\ntype ProjectFormProps = CreateProject | EditProjectName | AddProjectMembers;\n\nconst ProjectForm: React.FC<ProjectFormProps> = ({\n  closeDialog,\n  editMode,\n  currentName,\n  currentMembers,\n  projectId,\n}) => {\n  const classes = useFormStyles();\n  const dispatch = useDispatch();\n  const { submitError, submitLoading } = useSelector(selectProjectsState);\n  const { users } = useSelector(selectUsersState);\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      name: currentName || \"\",\n    },\n  });\n  const [members, setMembers] = useState<string[]>([]);\n\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\n    setMembers(selectedOption.map((s) => s.id));\n  };\n\n  const handleCreateProject = ({ name }: { name: string }) => {\n    dispatch(createNewProject({ name, members }, closeDialog));\n  };\n\n  const handleEditName = ({ name }: { name: string }) => {\n    dispatch(editProjectName(projectId as string, name, closeDialog));\n  };\n\n  const handleAddMembers = (e: React.FormEvent<EventTarget>) => {\n    e.preventDefault();\n\n    dispatch(addProjectMembers(projectId as string, members, closeDialog));\n  };\n\n  return (\n    <form\n      onSubmit={\n        editMode !== \"members\"\n          ? handleSubmit(\n              editMode === \"name\" ? handleEditName : handleCreateProject\n            )\n          : handleAddMembers\n      }\n    >\n      {editMode !== \"members\" && (\n        <TextField\n          inputRef={register}\n          name=\"name\"\n          required\n          fullWidth\n          type=\"text\"\n          label=\"Project Name\"\n          variant=\"outlined\"\n          error={\"name\" in errors}\n          helperText={\"name\" in errors ? errors.name?.message : \"\"}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LabelImportantIcon color=\"primary\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      {editMode !== \"name\" && (\n        <Autocomplete\n          style={{ marginTop: editMode !== \"members\" ? \"1.5em\" : 0 }}\n          multiple\n          filterSelectedOptions\n          onChange={selectMembersOnChange}\n          options={\n            editMode !== \"members\"\n              ? users.filter(\n                  (u) =>\n                    !currentMembers?.includes(u.id) &&\n                    u.role === \"team_leader\"\n                )\n              : users.filter(\n                  (u) =>\n                    !currentMembers?.includes(u.id) && u.role === \"developer\"\n                )\n          }\n          getOptionLabel={(option) => option.username}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              required={editMode === \"members\"}\n              label=\"Select Members\"\n              InputProps={{\n                ...params.InputProps,\n                startAdornment: (\n                  <>\n                    <InputAdornment\n                      position=\"start\"\n                      style={{ paddingLeft: \"0.4em\" }}\n                    >\n                      <GroupIcon color=\"primary\" />\n                    </InputAdornment>\n                    {params.InputProps.startAdornment}\n                  </>\n                ),\n              }}\n              inputProps={{\n                ...params.inputProps,\n                required: members.length === 0 && editMode === \"members\",\n              }}\n            />\n          )}\n          renderOption={(option) => (\n            <ListItem dense component=\"div\">\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  {option.username.slice(0, 1)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={option.username}\n                primaryTypographyProps={{\n                  color: \"secondary\",\n                  variant: \"body1\",\n                }}\n              />\n            </ListItem>\n          )}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                avatar={<Avatar>{option.username.slice(0, 1)}</Avatar>}\n                color=\"secondary\"\n                variant=\"outlined\"\n                label={option.username}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n        />\n      )}\n      <Button\n        size=\"large\"\n        color=\"primary\"\n        variant=\"contained\"\n        fullWidth\n        className={classes.submitBtn}\n        type=\"submit\"\n        disabled={submitLoading}\n      >\n        {editMode === \"name\"\n          ? \"Update Project Name\"\n          : editMode === \"members\"\n          ? \"Add Project Members\"\n          : \"Create New Project\"}\n      </Button>\n      {submitError && (\n        <div\n          style={{ width: \"100%\", marginTop: \"0.8em\", marginBottom: \"0.8em\" }}\n        >\n          <Alert\n            severity=\"error\"\n            onClose={() => dispatch(clearSubmitProjectError())}\n          >\n            <AlertTitle>Error</AlertTitle>\n            {submitError}\n          </Alert>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ProjectForm;\n","import FormDialog from \"../../components/FormDialog\";\nimport ProjectForm from \"./ProjectForm\";\nimport { Typography } from \"@material-ui/core\";\nimport { selectAuthState } from \"../../redux/slices/authSlice\";\nimport { useSelector } from \"react-redux\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst ProjectsActionCard = () => {\n  const { user } = useSelector(selectAuthState);\n\n  const showAddProjectButton = () => {\n    if (user?.role === \"manager\") {\n      return (\n        <FormDialog\n          triggerBtn={{\n            type: \"normal\",\n            text: \"Add Project\",\n            icon: AddIcon,\n            size: \"large\",\n          }}\n          title=\"Add a new project\"\n        >\n          <ProjectForm editMode={null} />\n        </FormDialog>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"1em\" }}>\n        <Typography variant={\"h5\"} color=\"secondary\">\n          All Projects\n        </Typography>\n        <Typography variant={\"subtitle1\"} color=\"secondary\">\n          List of all the created or joined projects.\n        </Typography>\n      </div>\n      {showAddProjectButton()}\n    </div>\n  );\n};\n\nexport default ProjectsActionCard;\n","import { useSelector } from \"react-redux\";\nimport { selectProjectsState } from \"../../redux/slices/projectsSlice\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport ProjectActionCard from \"./ProjectsActionCard\";\nimport { Paper } from \"@material-ui/core\";\nimport { useMainPageStyles } from \"../../styles/muiStyles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst ProjectsPage = () => {\n  const classes = useMainPageStyles();\n  const { projects, fetchStatus, fetchError } =\n    useSelector(selectProjectsState);\n\n  const filteredSortedProjects = projects;\n\n  const projectsDataToDisplay = () => {\n    if (fetchStatus === \"loading\") {\n      return (\n        <div\n          style={{\n            textAlign: \"center\",\n            marginTop: \"9em\",\n          }}\n        >\n          <CircularProgress disableShrink size={80} />\n        </div>\n      );\n    } else if (fetchStatus === \"succeeded\" && projects.length === 0) {\n      return <div>No Projects added yet.</div>;\n    } else if (fetchStatus === \"failed\" && fetchError) {\n      return <div>{`Error: ${fetchError}`}</div>;\n    } else if (\n      fetchStatus === \"succeeded\" &&\n      projects.length !== 0 &&\n      filteredSortedProjects.length === 0\n    ) {\n      return <div>No matches found.</div>;\n    } else {\n      return (\n        <div className={classes.projectsListTable}>\n          {<ProjectsTable projects={filteredSortedProjects} />}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.projectsPaper}>\n        <ProjectActionCard />\n        {projectsDataToDisplay()}\n      </Paper>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n","import axios from 'axios';\nimport backendUrl from '../backendUrl';\nimport { setConfig } from './auth';\nimport { BugPayload } from '../redux/types';\n\nconst baseUrl = `${backendUrl}/projects`;\n\nconst getBugs = async (projectId: string) => {\n  const response = await axios.get(`${baseUrl}/${projectId}/bugs`, setConfig());\n  return response.data;\n};\n\nconst createBug = async (projectId: string, bugData: BugPayload) => {\n  const response = await axios.post(\n    `${baseUrl}/${projectId}/bugs`,\n    bugData,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst updateBug = async (\n  projectId: string,\n  bugId: string,\n  bugData: BugPayload\n) => {\n  const response = await axios.put(\n    `${baseUrl}/${projectId}/bugs/${bugId}`,\n    bugData,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst deleteBug = async (projectId: string, bugId: string) => {\n  const response = await axios.delete(\n    `${baseUrl}/${projectId}/bugs/${bugId}`,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst closeBug = async (projectId: string, bugId: string) => {\n  const response = await axios.post(\n    `${baseUrl}/${projectId}/bugs/${bugId}/close`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst reopenBug = async (projectId: string, bugId: string) => {\n  const response = await axios.post(\n    `${baseUrl}/${projectId}/bugs/${bugId}/reopen`,\n    null,\n    setConfig()\n  );\n  return response.data;\n};\n\nconst bugService = {\n  getBugs,\n  createBug,\n  updateBug,\n  deleteBug,\n  closeBug,\n  reopenBug,\n};\n\nexport default bugService;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport bugService from \"../../services/bugs\";\nimport {\n  BugState,\n  BugSortValues,\n  BugPayload,\n  EditedBugData,\n  ClosedReopenedBugData,\n  BugFilterValues,\n} from \"../types\";\nimport { notify } from \"./notificationSlice\";\nimport { History } from \"history\";\nimport { getErrorMsg } from \"../../utils/helperFuncs\";\n\ninterface InitialBugState {\n  bugs: { [projectId: string]: BugState[] };\n  fetchLoading: boolean;\n  fetchError: string | null;\n  submitLoading: boolean;\n  submitError: string | null;\n  sortBy: BugSortValues;\n  filterBy: BugFilterValues;\n}\n\nconst initialState: InitialBugState = {\n  bugs: {},\n  fetchLoading: false,\n  fetchError: null,\n  submitLoading: false,\n  submitError: null,\n  sortBy: \"newest\",\n  filterBy: \"all\",\n};\n\nconst bugsSlice = createSlice({\n  name: \"bugs\",\n  initialState,\n  reducers: {\n    setBugs: (\n      state,\n      action: PayloadAction<{ bugs: BugState[]; projectId: string }>\n    ) => {\n      state.bugs[action.payload.projectId] = action.payload.bugs;\n      state.fetchLoading = false;\n      state.fetchError = null;\n    },\n    addBug: (\n      state,\n      action: PayloadAction<{ bug: BugState; projectId: string }>\n    ) => {\n      if (action.payload.projectId in state.bugs) {\n        state.bugs[action.payload.projectId].push(action.payload.bug);\n      } else {\n        state.bugs[action.payload.projectId] = [action.payload.bug];\n      }\n      state.submitLoading = false;\n      state.submitError = null;\n    },\n    updateBug: (\n      state,\n      action: PayloadAction<{\n        data: EditedBugData;\n        bugId: string;\n        projectId: string;\n      }>\n    ) => {\n      state.bugs[action.payload.projectId] = state.bugs[\n        action.payload.projectId\n      ].map((b) =>\n        b.id === action.payload.bugId ? { ...b, ...action.payload.data } : b\n      );\n\n      state.submitLoading = false;\n      state.submitError = null;\n    },\n    removeBug: (\n      state,\n      action: PayloadAction<{ bugId: string; projectId: string }>\n    ) => {\n      state.bugs[action.payload.projectId] = state.bugs[\n        action.payload.projectId\n      ].filter((b) => b.id !== action.payload.bugId);\n    },\n    updateBugStatus: (\n      state,\n      action: PayloadAction<{\n        data: ClosedReopenedBugData;\n        bugId: string;\n        projectId: string;\n      }>\n    ) => {\n      state.bugs[action.payload.projectId] = state.bugs[\n        action.payload.projectId\n      ].map((b) =>\n        b.id === action.payload.bugId ? { ...b, ...action.payload.data } : b\n      );\n    },\n\n    setFetchBugsLoading: (state) => {\n      state.fetchLoading = true;\n      state.fetchError = null;\n    },\n    setFetchBugsError: (state, action: PayloadAction<string>) => {\n      state.fetchLoading = false;\n      state.fetchError = action.payload;\n    },\n    setSubmitBugLoading: (state) => {\n      state.submitLoading = true;\n      state.submitError = null;\n    },\n    setSubmitBugError: (state, action: PayloadAction<string>) => {\n      state.submitLoading = false;\n      state.submitError = action.payload;\n    },\n    clearSubmitBugError: (state) => {\n      state.submitError = null;\n    },\n  },\n});\n\nexport const {\n  setBugs,\n  addBug,\n  updateBug,\n  removeBug,\n  updateBugStatus,\n  setFetchBugsLoading,\n  setFetchBugsError,\n  setSubmitBugLoading,\n  setSubmitBugError,\n  clearSubmitBugError,\n} = bugsSlice.actions;\n\nexport const fetchBugsByProjectId = (projectId: string): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setFetchBugsLoading());\n      const projectBugs = await bugService.getBugs(projectId);\n\n      dispatch(setBugs({ bugs: projectBugs, projectId }));\n    } catch (e: any) {\n      dispatch(setFetchBugsError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const createNewBug = (\n  projectId: string,\n  bugData: BugPayload,\n  closeDialog?: () => void\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setSubmitBugLoading());\n      const newBug = await bugService.createBug(projectId, bugData);\n      dispatch(addBug({ bug: newBug, projectId }));\n      dispatch(notify(\"New bug added!\", \"success\"));\n      closeDialog && closeDialog();\n    } catch (e: any) {\n      dispatch(setSubmitBugError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const editBug = (\n  projectId: string,\n  bugId: string,\n  bugData: BugPayload,\n  closeDialog?: () => void\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      dispatch(setSubmitBugLoading());\n      const updatedBug = await bugService.updateBug(projectId, bugId, bugData);\n      const { title, description, priority, updatedAt, updatedBy } =\n        updatedBug as EditedBugData;\n\n      dispatch(\n        updateBug({\n          data: { title, description, priority, updatedAt, updatedBy },\n          bugId,\n          projectId,\n        })\n      );\n      dispatch(notify(\"Successfully updated the bug!\", \"success\"));\n      closeDialog && closeDialog();\n    } catch (e: any) {\n      dispatch(setSubmitBugError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const deleteBug = (\n  projectId: string,\n  bugId: string,\n  history: History\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      await bugService.deleteBug(projectId, bugId);\n      history.push(`/projects/${projectId}`);\n      dispatch(removeBug({ bugId, projectId }));\n      dispatch(notify(\"Deleted the bug.\", \"success\"));\n    } catch (e: any) {\n      dispatch(notify(getErrorMsg(e), \"error\"));\n    }\n  };\n};\n\nexport const closeReopenBug = (\n  projectId: string,\n  bugId: string,\n  action: \"close\" | \"reopen\"\n): AppThunk => {\n  return async (dispatch) => {\n    try {\n      let returnedData;\n      if (action === \"close\") {\n        returnedData = await bugService.closeBug(projectId, bugId);\n      } else {\n        returnedData = await bugService.reopenBug(projectId, bugId);\n      }\n      const { isResolved, closedAt, closedBy, reopenedAt, reopenedBy } =\n        returnedData as ClosedReopenedBugData;\n      dispatch(\n        updateBugStatus({\n          data: { isResolved, closedAt, closedBy, reopenedAt, reopenedBy },\n          bugId,\n          projectId,\n        })\n      );\n      dispatch(\n        notify(\n          `${action === \"close\" ? \"Closed\" : \"Re-opened\"} the bug!`,\n          \"success\"\n        )\n      );\n    } catch (e: any) {\n      dispatch(notify(getErrorMsg(e), \"error\"));\n    }\n  };\n};\n\nexport const selectBugsState = (state: RootState) => state.bugs;\n\nexport const selectBugsByProjectId = (state: RootState, projectId: string) => {\n  return state.bugs.bugs?.[projectId];\n};\n\nexport const selectBugById = (\n  state: RootState,\n  projectId: string,\n  bugId: string\n) => {\n  return state.bugs.bugs?.[projectId].find((b) => b.id === bugId);\n};\n\nexport default bugsSlice.reducer;\n","import { useState } from 'react';\nimport { TriggerButtonTypes } from './types';\n\nimport {\n  Button,\n  IconButton,\n  MenuItem,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n  Fab,\n} from '@material-ui/core';\nimport { useDialogStyles } from '../styles/muiStyles';\n\nconst ConfirmDialog: React.FC<{\n  title: string;\n  contentText: string;\n  actionBtnText: string;\n  triggerBtn: TriggerButtonTypes;\n  actionFunc: () => void;\n}> = ({ title, contentText, actionBtnText, triggerBtn, actionFunc }) => {\n  const classes = useDialogStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n    triggerBtn.type === 'menu' && triggerBtn.closeMenu();\n  };\n\n  const handleConfirmedAction = () => {\n    actionFunc();\n    handleDialogClose();\n  };\n\n  const triggerButton = () => {\n    if (triggerBtn.type === 'icon') {\n      return (\n        <IconButton\n          color={triggerBtn.color || 'primary'}\n          onClick={handleDialogOpen}\n          size={triggerBtn.size || 'medium'}\n          className={triggerBtn.className}\n          style={triggerBtn.style}\n        >\n          <triggerBtn.icon fontSize={triggerBtn.iconSize || 'default'} />\n        </IconButton>\n      );\n    } else if (triggerBtn.type === 'menu') {\n      return (\n        <MenuItem onClick={handleDialogOpen}>\n          <triggerBtn.icon style={triggerBtn.iconStyle} />\n          {triggerBtn.text}\n        </MenuItem>\n      );\n    } else if (triggerBtn.type === 'fab') {\n      return (        \n          <Fab\n            variant={triggerBtn.variant || 'round'}\n            size={triggerBtn.size || 'medium'}\n            color={triggerBtn.color || 'primary'}\n            className={classes.fab}\n            onClick={handleDialogOpen}\n          >\n            <triggerBtn.icon />\n            {triggerBtn.variant === 'extended' && triggerBtn.text}\n          </Fab>        \n      );\n    } else if (triggerBtn.type === 'round') {\n      return (\n        <Button\n          color={triggerBtn.color || 'primary'}\n          variant={triggerBtn.variant || 'contained'}\n          size={triggerBtn.size || 'medium'}\n          onClick={handleDialogOpen}\n          style={triggerBtn.style}\n          className={classes.roundIconButton}\n        >\n          <triggerBtn.icon />\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color={triggerBtn.color || 'primary'}\n          variant={triggerBtn.variant || 'contained'}\n          size={triggerBtn.size || 'medium'}\n          startIcon={<triggerBtn.icon />}\n          onClick={handleDialogOpen}\n          style={triggerBtn.style}\n          className={triggerBtn.className}\n        >\n          {triggerBtn.text}\n        </Button>\n      );\n    }\n  };\n\n  return (\n    <div style={{ display: 'inline' }}>\n      {triggerButton()}\n      <Dialog open={dialogOpen} onClose={handleDialogOpen}>\n        <DialogTitle disableTypography>\n          <Typography color=\"secondary\" variant=\"h6\">\n            {title}\n          </Typography>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography>{contentText}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleDialogClose}\n            color=\"secondary\"\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleConfirmedAction}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"small\"\n          >\n            {actionBtnText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ConfirmDialog;\n","import { useForm, Controller } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  createNewBug,\n  editBug,\n  clearSubmitBugError,\n  selectBugsState,\n} from \"../../redux/slices/bugsSlice\";\nimport { BugPayload } from \"../../redux/types\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport {\n  TextField,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Button,\n  InputAdornment,\n  FormLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport { useFormStyles } from \"../../styles/muiStyles\";\nimport TitleIcon from \"@material-ui/icons/Title\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\n\nconst validationSchema = yup.object({\n  title: yup\n    .string()\n    .required(\"Required\")\n    .min(3, \"Must be at least 3 characters\")\n    .max(60, \"Must be at most 60 characters\"),\n\n  description: yup.string().required(\"Required\"),\n});\n\ninterface BugFormProps {\n  closeDialog?: () => void;\n  projectId: string;\n  isEditMode: boolean;\n  currentData?: BugPayload;\n  bugId?: string;\n}\n\nconst BugForm: React.FC<BugFormProps> = ({\n  closeDialog,\n  isEditMode,\n  projectId,\n  currentData,\n  bugId,\n}) => {\n  const classes = useFormStyles();\n  const dispatch = useDispatch();\n  const { submitError, submitLoading } = useSelector(selectBugsState);\n  const { register, control, handleSubmit, errors } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema),\n    defaultValues: {\n      title: currentData?.title || \"\",\n      description: currentData?.description || \"\",\n      priority: currentData?.priority || \"low\",\n    },\n  });\n\n  const handleCreateBug = (data: BugPayload) => {\n    dispatch(createNewBug(projectId, data, closeDialog));\n  };\n\n  const handleUpdateBug = (data: BugPayload) => {\n    dispatch(editBug(projectId, bugId as string, data, closeDialog));\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit(isEditMode ? handleUpdateBug : handleCreateBug)}\n    >\n      <TextField\n        inputRef={register}\n        name=\"title\"\n        required\n        fullWidth\n        type=\"text\"\n        label=\"Bug Title\"\n        variant=\"outlined\"\n        error={\"title\" in errors}\n        helperText={\"title\" in errors ? errors.title?.message : \"\"}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <TitleIcon color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        className={classes.fieldMargin}\n        multiline\n        rows={1}\n        rowsMax={4}\n        inputRef={register}\n        name=\"description\"\n        required\n        fullWidth\n        type=\"text\"\n        label=\"Description\"\n        variant=\"outlined\"\n        error={\"description\" in errors}\n        helperText={\"description\" in errors ? errors.description?.message : \"\"}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SubjectIcon color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Controller\n        control={control}\n        name=\"priority\"\n        as={\n          <FormControl className={classes.radioGroupForm}>\n            <RadioGroup row defaultValue=\"low\" className={classes.radioGroup}>\n              <FormLabel className={classes.radioGroupLabel}>\n                Priority:\n              </FormLabel>\n              <div className={classes.formControlLabels}>\n                <FormControlLabel\n                  value=\"low\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Low\"\n                />\n                <FormControlLabel\n                  value=\"medium\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"Medium\"\n                />\n                <FormControlLabel\n                  value=\"high\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"High\"\n                />\n              </div>\n            </RadioGroup>\n          </FormControl>\n        }\n      />\n      <Button\n        size=\"large\"\n        color=\"primary\"\n        variant=\"contained\"\n        fullWidth\n        className={classes.submitBtn}\n        type=\"submit\"\n        disabled={submitLoading}\n      >\n        {isEditMode ? \"Update Bug\" : \"Create New Bug\"}\n      </Button>\n      {submitError && (\n        <div\n          style={{ width: \"100%\", marginTop: \"0.8em\", marginBottom: \"0.8em\" }}\n        >\n          <Alert\n            severity=\"error\"\n            onClose={() => dispatch(clearSubmitBugError())}\n          >\n            <AlertTitle>Error</AlertTitle>\n            {submitError}\n          </Alert>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default BugForm;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteBug, closeReopenBug } from '../../redux/slices/bugsSlice';\nimport { BugPayload } from '../../redux/types';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport FormDialog from '../../components/FormDialog';\nimport BugForm from './BugForm';\n\nimport { Menu, IconButton } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\ninterface BugsMenuProps {\n  projectId: string;\n  bugId: string;\n  currentData: BugPayload;\n  isResolved: boolean;\n  iconSize?: 'small' | 'default' | 'large';\n}\n\nconst BugsMenu: React.FC<BugsMenuProps> = ({\n  projectId,\n  bugId,\n  currentData,\n  isResolved,\n  iconSize,\n}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDeleteBug = () => {\n    dispatch(deleteBug(projectId, bugId, history));\n  };\n\n  const handleCloseBug = () => {\n    dispatch(closeReopenBug(projectId, bugId, 'close'));\n  };\n\n  const handleReopenBug = () => {\n    dispatch(closeReopenBug(projectId, bugId, 'reopen'));\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleOpenMenu} size=\"small\">\n        <MoreHorizIcon color=\"primary\" fontSize={iconSize || 'large'} />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        marginThreshold={8}\n        elevation={4}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        \n        {isResolved ? (\n          <ConfirmDialog\n            title=\"Re-open the Bug\"\n            contentText=\"Are you sure you want to re-open the bug?\"\n            actionBtnText=\"Re-open Bug\"\n            triggerBtn={{\n              type: 'menu',\n              text: 'Re-open Bug',\n              icon: RedoIcon,\n              iconStyle: { marginRight: '10px' },\n              closeMenu: handleCloseMenu,\n            }}\n            actionFunc={handleReopenBug}\n          />\n        ) : (\n          <ConfirmDialog\n            title=\"Close the Bug\"\n            contentText=\"Are you sure you want to close the bug?\"\n            actionBtnText=\"Close Bug\"\n            triggerBtn={{\n              type: 'menu',\n              text: 'Close Bug',\n              icon: DoneOutlineIcon,\n              iconStyle: { marginRight: '10px' },\n              closeMenu: handleCloseMenu,\n            }}\n            actionFunc={handleCloseBug}\n          />\n        )}\n        <FormDialog\n          triggerBtn={{\n            type: 'menu',\n            text: 'Update/View Bug',\n            icon: EditOutlinedIcon,\n            iconStyle: { marginRight: '10px' },\n            closeMenu: handleCloseMenu,\n          }}\n          title=\"Edit the bug details\"\n        >\n          <BugForm\n            isEditMode={true}\n            projectId={projectId}\n            bugId={bugId}\n            currentData={currentData}\n          />\n        </FormDialog>\n        <ConfirmDialog\n          title=\"Confirm Delete Bug\"\n          contentText=\"Are you sure you want to permanently delete the bug?\"\n          actionBtnText=\"Delete Bug\"\n          triggerBtn={{\n            type: 'menu',\n            text: 'Delete Bug',\n            icon: DeleteOutlineIcon,\n            iconStyle: { marginRight: '10px' },\n            closeMenu: handleCloseMenu,\n          }}\n          actionFunc={handleDeleteBug}\n        />        \n      </Menu>\n    </div>\n  );\n};\n\nexport default BugsMenu;\n","import CSS from 'csstype';\n\nconst colors = {\n  low: '#FFD700',\n  medium: '#FF8C00',\n  high: '#ff402c',\n  closed: '#008000',\n  open: '#000080',\n  closedBg: '#e2ffe2',\n  openBg: '#e2e2ff',\n};\n\nexport const priorityStyles = (\n  priority: 'low' | 'medium' | 'high'\n): CSS.Properties => {\n  return {\n    color: priority === 'low' ? '#000' : '#fff',\n    backgroundColor: colors[priority],\n    borderRadius: '4px',\n    fontWeight: 500,\n    padding: '0.35em',\n    maxWidth: '4em',\n  };\n};\n\nexport const statusStyles = (isResolved: boolean): CSS.Properties => {\n  const color = isResolved ? colors.closed : colors.open;\n  const backgroundColor = isResolved ? colors.closedBg : colors.openBg;\n\n  return {\n    color,\n    backgroundColor,\n    borderRadius: '4px',\n    fontWeight: 500,\n    padding: '0.35em',\n    maxWidth: '4em',\n  };\n};\n","import React from 'react';\nimport { BugState } from '../../redux/types';\nimport BugsMenu from './BugsMenu';\nimport { formatDateTime } from '../../utils/helperFuncs';\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\n\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,  \n  Paper,\n} from '@material-ui/core';\nimport { useTableStyles } from '../../styles/muiStyles';\n\nconst tableHeaders = [\n  'Title',\n  'Priority',\n  'Status',\n  'Added',\n  'Updated',  \n  'Actions',\n];\n\nconst BugsTable: React.FC<{ bugs: BugState[] }> = ({ bugs }) => {\n  const classes = useTableStyles();\n  \n\n  return (\n    <Paper className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {tableHeaders.map((t) => (\n              <TableCell key={t} align=\"center\">\n                {t}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {bugs.map((b) => (\n            <TableRow key={b.id}>\n              <TableCell\n                align=\"center\"                 \n              >                \n                  {b.title}                \n              </TableCell>\n              <TableCell align=\"center\">\n                <div\n                  style={{\n                    ...priorityStyles(b.priority),\n                    textTransform: 'capitalize',\n                    margin: '0 auto',\n                  }}\n                >\n                  {b.priority}\n                </div>\n              </TableCell>\n              <TableCell align=\"center\">\n                <div\n                  style={{\n                    ...statusStyles(b.isResolved),\n                    margin: '0 auto',\n                  }}\n                >\n                  {b.isResolved ? 'Closed' : 'Open'}\n                </div>\n              </TableCell>\n              <TableCell align=\"center\">\n                {formatDateTime(b.createdAt)} ~ {b.createdBy.username}\n              </TableCell>\n              <TableCell align=\"center\">\n                {!b.updatedAt || !b.updatedBy\n                  ? 'n/a'\n                  : `${formatDateTime(b.updatedAt)} ~ ${b.updatedBy.username}`}\n              </TableCell>              \n              <TableCell align=\"center\">              \n                <BugsMenu                \n                  projectId={b.projectId}\n                  bugId={b.id}\n                  currentData={{\n                    title: b.title,\n                    description: b.description,\n                    priority: b.priority,\n                  }}\n                  isResolved={b.isResolved}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nexport default BugsTable;\n","import FormDialog from \"../../components/FormDialog\";\nimport BugForm from \"./BugForm\";\nimport { useActionCardStyles } from \"../../styles/muiStyles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector } from \"react-redux\";\nimport { selectAuthState } from \"../../redux/slices/authSlice\";\nconst BugsActionCard: React.FC<{\n  projectId: string;\n  filterValue: string;\n  setFilterValue: (filterValue: string) => void;\n}> = ({ projectId, filterValue, setFilterValue }) => {\n  const classes = useActionCardStyles();\n  const { user } = useSelector(selectAuthState);\n  const showBugPopup = () => {\n    if (user?.role !== \"developer\")\n      return (\n        <div>\n          <div className={classes.flexWrapper}>\n            <FormDialog\n              triggerBtn={{\n                type: \"normal\",\n                text: \"Add Bug\",\n                icon: AddIcon,\n                size: \"large\",\n              }}\n              title=\"Add a new bug\"\n            >\n              <BugForm isEditMode={false} projectId={projectId} />\n            </FormDialog>\n          </div>\n        </div>\n      );\n  };\n  return <div>{showBugPopup()}</div>;\n};\n\nexport default BugsActionCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchBugsByProjectId,\n  selectBugsByProjectId,\n  selectBugsState,\n} from \"../../redux/slices/bugsSlice\";\nimport { RootState } from \"../../redux/store\";\nimport BugsTable from \"./BugsTable\";\nimport BugsActionCard from \"./BugsActionCard\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { useMainPageStyles } from \"../../styles/muiStyles\";\nimport BugReportOutlinedIcon from \"@material-ui/icons/BugReportOutlined\";\n\nconst BugsCard: React.FC<{ projectId: string; isMobile: boolean }> = ({\n  projectId,\n  isMobile,\n}) => {\n  const classes = useMainPageStyles();\n  const dispatch = useDispatch();\n  const bugs = useSelector((state: RootState) =>\n    selectBugsByProjectId(state, projectId)\n  );\n  const { fetchLoading, fetchError } = useSelector(selectBugsState);\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  useEffect(() => {\n    if (!bugs) {\n      dispatch(fetchBugsByProjectId(projectId));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const filteredSortedBugs = bugs;\n\n  const bugsDataToDisplay = () => {\n    if (fetchLoading) {\n      return (\n        <div\n          style={{\n            textAlign: \"center\",\n            marginTop: \"4em\",\n          }}\n        >\n          <CircularProgress disableShrink size={80} />\n        </div>\n      );\n    } else if (fetchError) {\n      return <div>{`Error: ${fetchError}`}</div>;\n    } else if (!bugs || bugs.length === 0) {\n      return <div>No Bugs added yet.</div>;\n    } else {\n      return <div>{<BugsTable bugs={filteredSortedBugs} />}</div>;\n    }\n  };\n\n  return (\n    <Paper className={classes.bugsPaper}>\n      <Typography\n        variant={isMobile ? \"h6\" : \"h5\"}\n        color=\"secondary\"\n        className={classes.flexHeader}\n      >\n        <BugReportOutlinedIcon\n          fontSize={isMobile ? \"default\" : \"large\"}\n          style={{ marginRight: \"0.2em\" }}\n        />\n        Bugs\n      </Typography>\n      <div className={classes.bugsActionCard}>\n        <BugsActionCard\n          projectId={projectId}\n          filterValue={filterValue}\n          setFilterValue={setFilterValue}\n        />\n      </div>\n      {bugsDataToDisplay()}\n    </Paper>\n  );\n};\n\nexport default BugsCard;\n","import { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectProjectById,\n  deleteProject,\n} from \"../../redux/slices/projectsSlice\";\nimport { selectAuthState } from \"../../redux/slices/authSlice\";\nimport { RootState } from \"../../redux/store\";\nimport ProjectForm from \"./ProjectForm\";\nimport BugsCard from \"./BugsCard\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\nimport FormDialog from \"../../components/FormDialog\";\nimport { formatDateTime } from \"../../utils/helperFuncs\";\n\nimport { Paper, Typography, Divider, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMainPageStyles } from \"../../styles/muiStyles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GroupAddOutlinedIcon from \"@material-ui/icons/GroupAddOutlined\";\n\ninterface ParamTypes {\n  projectId: string;\n}\n\nconst ProjectDetailsPage = () => {\n  const classes = useMainPageStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const { projectId } = useParams<ParamTypes>();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { user } = useSelector(selectAuthState);\n  const projectInState = useSelector((state: RootState) =>\n    selectProjectById(state, projectId)\n  );\n\n  if (!projectInState) {\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.notFoundPaper}>\n          <Typography\n            variant=\"h6\"\n            color=\"secondary\"\n            className={classes.error404Text}\n            style={{ marginTop: \"5em\" }}\n          >\n            404: Project Not Found!\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n\n  const { id, name, members, createdAt, updatedAt, createdBy } = projectInState;\n\n  const isAdmin = createdBy.id === user?.id;\n  const isProjectManager = user?.role === \"team_leader\";\n\n  const handleDeleteProject = () => {\n    dispatch(deleteProject(id, history));\n  };\n\n  const adminBtns = () => {\n    if (!isAdmin && !isProjectManager) return null;\n\n    return (\n      <>\n        <FormDialog\n          triggerBtn={{\n            type: isMobile ? \"round\" : \"normal\",\n            text: \"Add Members\",\n            icon: GroupAddOutlinedIcon,\n            style: { marginRight: \"1em\" },\n          }}\n          title=\"Add members to project\"\n        >\n          <ProjectForm\n            editMode=\"members\"\n            currentMembers={members.map((m) => m.member.id)}\n            projectId={id}\n          />\n        </FormDialog>\n        <ConfirmDialog\n          title=\"Confirm Delete Project\"\n          contentText=\"Are you sure you want to permanently delete your project?\"\n          actionBtnText=\"Delete Project\"\n          triggerBtn={{\n            type: isMobile ? \"round\" : \"normal\",\n            text: \"Delete Project\",\n            icon: DeleteOutlineIcon,\n          }}\n          actionFunc={handleDeleteProject}\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.detailsHeader}>\n        <div className={classes.flexHeader}>\n          <Typography\n            variant={isMobile ? \"h5\" : \"h4\"}\n            color=\"secondary\"\n            style={{ marginRight: \"0.2em\" }}\n          >\n            <strong>{name}</strong>\n          </Typography>\n          {isAdmin && (\n            <FormDialog\n              triggerBtn={{ type: \"icon\", icon: EditIcon, size: \"small\" }}\n              title=\"Edit the project name\"\n            >\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\n            </FormDialog>\n          )}\n        </div>\n        <Divider style={{ margin: \"0.5em 0\" }} />\n        <Typography variant=\"subtitle2\" color=\"secondary\">\n          Created At: <em>{formatDateTime(createdAt)}</em>\n        </Typography>\n        {createdAt !== updatedAt && (\n          <Typography variant=\"subtitle2\" color=\"secondary\">\n            Updated At: <em>{formatDateTime(updatedAt)}</em>\n          </Typography>\n        )}\n        <div className={classes.btnsWrapper}>{adminBtns()}</div>\n      </Paper>\n      <BugsCard projectId={projectId} isMobile={isMobile} />\n    </div>\n  );\n};\n\nexport default ProjectDetailsPage;\n","import React from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectBugById,\n  deleteBug,\n  closeReopenBug,\n} from '../../redux/slices/bugsSlice';\nimport { RootState } from '../../redux/store';\nimport FormDialog from '../../components/FormDialog';\nimport BugForm from './BugForm';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport { formatDateTime } from '../../utils/helperFuncs';\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\nimport CSS from 'csstype';\n\nimport { Paper, Typography, Divider, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMainPageStyles } from '../../styles/muiStyles';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\ninterface ParamTypes {\n  projectId: string;\n  bugId: string;\n}\n\nconst BugsDetailsPage = () => {\n  const classes = useMainPageStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const { projectId, bugId } = useParams<ParamTypes>();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const bug = useSelector((state: RootState) =>\n    selectBugById(state, projectId, bugId)\n  );\n\n  if (!bug) {\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.notFoundPaper}>\n          <Typography\n            variant=\"h6\"\n            color=\"secondary\"\n            className={classes.error404Text}\n            style={{ marginTop: '5em' }}\n          >\n            404: Bug Not Found!\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n\n  const {\n    id,\n    title,\n    description,\n    priority,\n    isResolved,\n    createdBy,\n    createdAt,\n    updatedBy,\n    updatedAt,\n    closedBy,\n    closedAt,\n    reopenedBy,\n    reopenedAt,\n  } = bug;\n\n  const handleDeleteBug = () => {\n    dispatch(deleteBug(projectId, bugId, history));\n  };\n\n  const handleCloseBug = () => {\n    dispatch(closeReopenBug(projectId, bugId, 'close'));\n  };\n\n  const handleReopenBug = () => {\n    dispatch(closeReopenBug(projectId, bugId, 'reopen'));\n  };\n\n  const statusCSS: CSS.Properties = {\n    ...statusStyles(isResolved),\n    display: 'inline',\n    padding: '0.20em 0.4em',\n  };\n\n  const statusInfo = () => {\n    if (!isResolved && reopenedAt && reopenedBy) {\n      return (\n        <span>\n          <div style={statusCSS}>Re-opened</div> -{' '}\n          <em>{formatDateTime(reopenedAt)}</em> ~{' '}\n          <strong>{reopenedBy.username}</strong>\n        </span>\n      );\n    } else if (isResolved && closedAt && closedBy) {\n      return (\n        <span>\n          <div style={statusCSS}>Closed</div> -{' '}\n          <em>{formatDateTime(closedAt)}</em> ~{' '}\n          <strong>{closedBy.username}</strong>\n        </span>\n      );\n    } else {\n      return <div style={statusCSS}>Open</div>;\n    }\n  };\n\n  const closeReopenBtns = () => {\n    if (isResolved) {\n      return (\n        <ConfirmDialog\n          title=\"Re-open the Bug\"\n          contentText=\"Are you sure you want to re-open the bug?\"\n          actionBtnText=\"Re-open Bug\"\n          triggerBtn={{\n            type: isMobile ? 'round' : 'normal',\n            text: 'Re-open Bug',\n            icon: RedoIcon,\n          }}\n          actionFunc={handleReopenBug}\n        />\n      );\n    } else {\n      return (\n        <ConfirmDialog\n          title=\"Close the Bug\"\n          contentText=\"Are you sure you want to close the bug?\"\n          actionBtnText=\"Close Bug\"\n          triggerBtn={{\n            type: isMobile ? 'round' : 'normal',\n            text: 'Close Bug',\n            icon: DoneOutlineIcon,\n          }}\n          actionFunc={handleCloseBug}\n        />\n      );\n    }\n  };\n\n  const updateBugBtn = () => {\n    return (\n      <FormDialog\n        triggerBtn={{\n          type: isMobile ? 'round' : 'normal',\n          text: 'Update Bug Info',\n          icon: EditOutlinedIcon,\n          style: { marginLeft: '1em' },\n        }}\n        title=\"Edit the bug details\"\n      >\n        <BugForm\n          isEditMode={true}\n          projectId={projectId}\n          bugId={id}\n          currentData={{ title, description, priority }}\n        />\n      </FormDialog>\n    );\n  };\n\n  const deleteBugBtn = () => {\n    return (\n      <ConfirmDialog\n        title=\"Confirm Delete Bug\"\n        contentText=\"Are you sure you want to permanently delete the bug?\"\n        actionBtnText=\"Delete Bug\"\n        triggerBtn={{\n          type: isMobile ? 'round' : 'normal',\n          text: 'Delete Bug',\n          icon: DeleteOutlineIcon,\n          style: { marginLeft: '1em' },\n        }}\n        actionFunc={handleDeleteBug}\n      />\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.detailsHeader}>\n        <Typography variant={isMobile ? 'h5' : 'h4'} color=\"secondary\">\n          <strong>{title}</strong>\n        </Typography>\n        <Divider style={{ margin: '0.5em 0' }} />\n        <Typography color=\"secondary\" variant=\"h6\">\n          {description}\n        </Typography>\n        <Typography\n          color=\"secondary\"\n          variant=\"subtitle2\"\n          className={classes.marginText}\n        >\n          Status: {statusInfo()}\n        </Typography>\n        <Typography\n          color=\"secondary\"\n          variant=\"subtitle2\"\n          className={classes.marginText}\n        >\n          Priority:{' '}\n          <div\n            style={{\n              ...priorityStyles(priority),\n              display: 'inline',\n              padding: '0.20em 0.4em',\n              textTransform: 'capitalize',\n            }}\n          >\n            {priority}\n          </div>\n        </Typography>\n        <Typography color=\"secondary\" variant=\"subtitle2\">\n          Created: <em>{formatDateTime(createdAt)}</em> ~{' '}\n          <strong>{createdBy.username}</strong>\n        </Typography>\n        {updatedBy && updatedAt && (\n          <Typography color=\"secondary\" variant=\"subtitle2\">\n            Updated: <em>{formatDateTime(updatedAt)}</em> ~{' '}\n            <strong>{updatedBy.username}</strong>\n          </Typography>\n        )}\n        <div className={classes.btnsWrapper}>\n          {closeReopenBtns()}\n          {updateBugBtn()}\n          {deleteBugBtn()}\n        </div>\n      </Paper>\n    \n    </div>\n  );\n};\n\nexport default BugsDetailsPage;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport LoginPage from \"./pages/Auth/LoginPage\";\nimport OnBoardPage from \"./pages/Auth/CreateUserPage\";\nimport ProjectsPage from \"./pages/Main/ProjectsPage\";\nimport ProjectDetailsPage from \"./pages/Main/ProjectDetailsPage\";\nimport BugDetailsPage from \"./pages/Main/BugsDetailsPage\";\nimport { useSelector } from \"react-redux\";\nimport { selectAuthState } from \"./redux/slices/authSlice\";\nimport storage from \"./utils/localStorage\";\nimport { Container, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nconst Routes = () => {\n  const { user } = useSelector(selectAuthState);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const isLoggedIn = storage.loadUser() || user;\n  return (\n    <Container disableGutters={isMobile}>\n      <Switch>\n        <Route exact path=\"/\">\n          {isLoggedIn ? <ProjectsPage /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/projects/:projectId\">\n          {isLoggedIn ? <ProjectDetailsPage /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/projects/:projectId/bugs/:bugId\">\n          {user ? <BugDetailsPage /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/login\">\n          {!isLoggedIn ? <LoginPage /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/onboarduser\">          \n             {isLoggedIn && isLoggedIn.role === \"manager\" ? (\n          <OnBoardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}  \n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routes;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearNotification,\n  selectNotifState,\n} from '../redux/slices/notificationSlice';\n\nimport { Snackbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    [theme.breakpoints.down('xs')]: {\n      bottom: 75,\n    },\n  },\n}));\n\nconst ToastNotification = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { message, type } = useSelector(selectNotifState);\n\n  const clearNotif = () => {\n    dispatch(clearNotification());\n  };\n\n  if (!message || !type) return null;\n\n  return (\n    <Snackbar\n      open={!!message}\n      onClose={clearNotif}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      className={classes.snackbar}\n    >\n      <Alert onClose={clearNotif} severity={type}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ToastNotification;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst customTheme = () =>\n  createMuiTheme({\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#357a38\",\n        light: \"#f4faf4\",\n      },\n      secondary: {\n        main: \"#357a38\",\n      },\n    },\n    overrides: {\n      MuiTypography: {\n        root: {\n          wordBreak: \"break-word\",\n        },\n      },\n    },\n  });\n\nexport default customTheme;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { autoLogin } from './redux/slices/authSlice';\nimport NavBar from './components/NavBar';\nimport Routes from './Routes';\nimport ToastNotification from './components/ToastNotification';\n\n\nimport customTheme from './styles/customTheme';\nimport { useBodyStyles } from './styles/muiStyles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const classes = useBodyStyles()();\n\n  useEffect(() => {\n    dispatch(autoLogin());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={customTheme()}>\n      <div className={classes.root}>\n        <NavBar />\n        <Routes />\n        <ToastNotification />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport authReducer from \"./slices/authSlice\";\nimport projectsReducer from \"./slices/projectsSlice\";\nimport bugsReducer from \"./slices/bugsSlice\";\nimport usersReducer from \"./slices/usersSlice\";\nimport notificationReducer from \"./slices/notificationSlice\";\n\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    projects: projectsReducer,\n    bugs: bugsReducer,\n    users: usersReducer,\n    notification: notificationReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}